mode: daemonset

presets:
  logsCollection:
    enabled: true
    includeCollectorLogs: true
  kubernetesAttributes:
    enabled: true

config:
  receivers:
    jaeger: null
    zipkin: null
    otlp:
      protocols:
        grpc:
          endpoint: ${env:MY_POD_IP}:4317
        http:
          endpoint: ${env:MY_POD_IP}:4318
    # prometheus:
    #   config:
    #     scrape_configs:
    #       - job_name: opentelemetry-collector
    #         scrape_interval: 10s
    #         static_configs:
    #           - targets:
    #               - ${env:MY_POD_IP}:8888

  processors:
    batch:
      timeout: 1s
      send_batch_size: 50
    memory_limiter: null   # If set to null, will be overridden with values based on k8s resource limits
    tail_sampling:
      # best practice: `decision_wait` * `traces_per_sec` = 2 * `num_traces`
      decision_wait: 5s
      num_traces: 1000
      expected_new_traces_per_sec: 100
      policies:
        [          
          {
            name: errors-policy,
            type: status_code,
            status_code: {status_codes: [ERROR]}
          },
          {
            name: randomized-policy,
            type: probabilistic,
            probabilistic: {sampling_percentage: 25}
          }
        ]

  exporters:
    otlp:
      endpoint: tempo.o11y.svc.cluster.local:4317
      tls:
        insecure: true
    debug: {}

  service:
    pipelines:
      traces:
        receivers:
          - otlp
        processors:
          - memory_limiter
          - batch
          # - tail_sampling
        exporters:
          - otlp
          - debug

tolerations:
- key: node-role.kubernetes.io/control-plane
  effect: NoSchedule
